[{"rendered_body":"\u003cp\u003eこの記事は\u003ca href=\"https://qiita.com/advent-calendar/2017/gas_beginner\"\u003eGoogle Apps Scriptを実例交えて基礎からざっくり学ぶ Advent Calendar 2017\u003c/a\u003e　9日目の記事です。\u003c/p\u003e\n\n\u003cp\u003e本アドベントカレンダーは\u003ca href=\"/rt_p\" class=\"user-mention js-hovercard\" title=\"rt_p\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"rt_p\"\u003e@rt_p\u003c/a\u003eの個人プロジェクトですが、筆者は\u003ca href=\"https://qiita.com/advent-calendar/2017/a-t-brides\"\u003eAteam Brides Inc. Advent Calendar 2017\u003c/a\u003eにも参加しています。そちらでもGoogle Apps Scriptの出張版記事を2回ほど書く予定ですので、覗いていただけると嬉しいです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003e今回の記事は何のことはない、単なるtry catchです。\u003cbr\u003e\nGASを使っていると外部サービスと連携することが多いと思うのですが、例えば外部サービスのサービスが落ちたりだとか、APIの回数制限に引っかかって定期実行がうまくいかなかったりだとか…\u003cbr\u003e\nそういう時に、エラーがしっかりキャッチできて通知できると嬉しいですよね。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"エラーが起きるサンプル\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E8%B5%B7%E3%81%8D%E3%82%8B%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eエラーが起きるサンプル\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"javascript\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eerror.gs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003emyFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eerrorSample\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrorSample\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003esheet\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetRange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003esetValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'hoge'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// sheetが未定義なのでエラーになる\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e上記サンプルを実行すると、\u003ccode\u003esheet\u003c/code\u003eという変数が未定義なのに\u003ccode\u003egetRange()\u003c/code\u003eをしようとしてエラーで怒られるはずです。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/35385f8a8c833dc86839420e76393a7f0844e73c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3139393637382f31396665646531312d346266372d356239382d363866632d3164613239626362303031302e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/35385f8a8c833dc86839420e76393a7f0844e73c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3139393637382f31396665646531312d346266372d356239382d363866632d3164613239626362303031302e706e67\" alt=\"error.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/199678/19fede11-4bf7-5b98-68fc-1da29bcb0010.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e開発中はすぐにエラーに気付けますが、例えばこのスクリプトを\u003ca href=\"https://qiita.com/rf_p/items/267a8d9daa8c9f1ef027\" id=\"reference-5b620afd988f6d2f891e\"\u003e昨日の記事\u003c/a\u003eのように1分だとか1時間だとかで定期実行していると、エラーに気付くのも遅れますよね。\u003c/p\u003e\n\n\u003cp\u003e一応定期実行がコケた際のメール通知は標準機能で搭載されていますが、通知タイミングも遅いので対応も遅れがちです。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"try-catchでエラーをキャッチする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#try-catch%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003etry catchでエラーをキャッチする\u003c/h1\u003e\n\n\u003cp\u003e下記サンプルを実行すると、先程のように画面にエラーは出なくなるはずです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"javascript\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eerror_catch.gs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003emyFunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eerrorSample\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003ecatch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eLogger\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eerrorSample\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003esheet\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetRange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nx\"\u003esetValue\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'hoge'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// sheetが未定義なのでエラーなので例外が投げられる\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eCtrl+Enterでログを開くと、今回はエラーがログに吐かれているのを確認できます。\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/438cdee9cf86df7492c416a2481230b606dbcb73/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3139393637382f32353161616638372d346330332d386363362d396462312d3965326563343833366333362e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/438cdee9cf86df7492c416a2481230b606dbcb73/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3139393637382f32353161616638372d346330332d386363362d396462312d3965326563343833366333362e706e67\" alt=\"error2.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/199678/251aaf87-4c03-8cc6-9db1-9e2ec4836c36.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eログに吐いているのは正直サンプルとしては不適切な気もしますが\u003cimg alt=\":sweat_smile:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f605.png\" title=\":sweat_smile:\" width=\"20\"\u003e\u003cbr\u003e\n次回の記事では自動でメールを送るサンプルを紹介するので、実行に失敗したタイミングですぐにメール通知をしたり、ChatworkのAPIを叩いて通知することですぐに気付ける仕組みが作れます。\u003c/p\u003e\n\n\u003cp\u003eまた、サンプルでも分かるようにtryブロックの中で呼んだ関数の中でエラーが起きてもしっかりキャッチできるので、\u003ccode\u003emyFunction()\u003c/code\u003eの中身をtry catchで大きく囲ってしまうのも、スマートなやり方には見えませんが方法としては楽だしアリなのかなと思っていたりします。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"おわりに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおわりに\u003c/h1\u003e\n\n\u003cp\u003e今回は本当にこんなことができますよ程度のシンプルな内容でした。\u003c/p\u003e\n\n\u003cp\u003e本アドベントカレンダーは、1日目～9日目あたりは基礎編でGASに関する基本的な操作を紹介していきます。\u003cbr\u003e\n10日目以降は応用編ということで、実際に作ったアプリケーションとそれに関する技術の紹介になります。お楽しみに！\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"明日\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%98%8E%E6%97%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e明日\u003c/h1\u003e\n\n\u003cp\u003e【Google Apps Script】その10　スプレッドシートにボタンを設置して、クリックで実行する\u003cbr\u003e\nとなります。\u003cbr\u003e\n実際にスプレッドシートとデータをやり取りする方法をご紹介します。\u003c/p\u003e\n\n\u003cp\u003e前の記事\u003cbr\u003e\n\u003ca href=\"https://qiita.com/rf_p/items/267a8d9daa8c9f1ef027\"\u003e【Google Apps Script】その8　スクリプトを定期実行し、ビットコインの1分ごとの価格を自動取得する\u003c/a\u003e\u003cbr\u003e\n次の記事\u003cbr\u003e\n【Google Apps Script】その10　スプレッドシートにボタンを設置して、クリックで実行する\u003c/p\u003e\n","body":"この記事は[Google Apps Scriptを実例交えて基礎からざっくり学ぶ Advent Calendar 2017](https://qiita.com/advent-calendar/2017/gas_beginner)　9日目の記事です。\n\n本アドベントカレンダーは@rt_pの個人プロジェクトですが、筆者は[Ateam Brides Inc. Advent Calendar 2017](https://qiita.com/advent-calendar/2017/a-t-brides)にも参加しています。そちらでもGoogle Apps Scriptの出張版記事を2回ほど書く予定ですので、覗いていただけると嬉しいです。\n\n# はじめに\n\n今回の記事は何のことはない、単なるtry catchです。\nGASを使っていると外部サービスと連携することが多いと思うのですが、例えば外部サービスのサービスが落ちたりだとか、APIの回数制限に引っかかって定期実行がうまくいかなかったりだとか…\nそういう時に、エラーがしっかりキャッチできて通知できると嬉しいですよね。\n\n# エラーが起きるサンプル\n\n```javascript:error.gs\nfunction myFunction() {\n  errorSample();\n}\n\nfunction errorSample() {\n  sheet.getRange(1, 1).setValue('hoge'); // sheetが未定義なのでエラーになる\n}\n```\n\n上記サンプルを実行すると、`sheet`という変数が未定義なのに`getRange()`をしようとしてエラーで怒られるはずです。\n\n![error.png](https://qiita-image-store.s3.amazonaws.com/0/199678/19fede11-4bf7-5b98-68fc-1da29bcb0010.png)\n\n開発中はすぐにエラーに気付けますが、例えばこのスクリプトを[昨日の記事](https://qiita.com/rf_p/items/267a8d9daa8c9f1ef027)のように1分だとか1時間だとかで定期実行していると、エラーに気付くのも遅れますよね。\n\n一応定期実行がコケた際のメール通知は標準機能で搭載されていますが、通知タイミングも遅いので対応も遅れがちです。\n\n# try catchでエラーをキャッチする\n\n下記サンプルを実行すると、先程のように画面にエラーは出なくなるはずです。\n\n```javascript:error_catch.gs\nfunction myFunction() {\n  try {\n    errorSample();\n  } catch (e) {\n    Logger.log(e);\n  }\n}\n\nfunction errorSample() {\n  sheet.getRange(1, 1).setValue('hoge'); // sheetが未定義なのでエラーなので例外が投げられる\n}\n```\n\nCtrl+Enterでログを開くと、今回はエラーがログに吐かれているのを確認できます。\n\n![error2.png](https://qiita-image-store.s3.amazonaws.com/0/199678/251aaf87-4c03-8cc6-9db1-9e2ec4836c36.png)\n\nログに吐いているのは正直サンプルとしては不適切な気もしますが:sweat_smile:\n次回の記事では自動でメールを送るサンプルを紹介するので、実行に失敗したタイミングですぐにメール通知をしたり、ChatworkのAPIを叩いて通知することですぐに気付ける仕組みが作れます。\n\nまた、サンプルでも分かるようにtryブロックの中で呼んだ関数の中でエラーが起きてもしっかりキャッチできるので、`myFunction()`の中身をtry catchで大きく囲ってしまうのも、スマートなやり方には見えませんが方法としては楽だしアリなのかなと思っていたりします。\n\n# おわりに\n\n今回は本当にこんなことができますよ程度のシンプルな内容でした。\n\n本アドベントカレンダーは、1日目～9日目あたりは基礎編でGASに関する基本的な操作を紹介していきます。\n10日目以降は応用編ということで、実際に作ったアプリケーションとそれに関する技術の紹介になります。お楽しみに！\n\n# 明日\n\n【Google Apps Script】その10　スプレッドシートにボタンを設置して、クリックで実行する\nとなります。\n実際にスプレッドシートとデータをやり取りする方法をご紹介します。\n\n前の記事\n[【Google Apps Script】その8　スクリプトを定期実行し、ビットコインの1分ごとの価格を自動取得する](https://qiita.com/rf_p/items/267a8d9daa8c9f1ef027)\n次の記事\n【Google Apps Script】その10　スプレッドシートにボタンを設置して、クリックで実行する\n","coediting":false,"comments_count":0,"created_at":"2017-12-13T22:29:42+09:00","group":null,"id":"eb0cd8733132b000189a","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"JavaScript","versions":[]},{"name":"GoogleAppsScript","versions":[]},{"name":"spreadsheet","versions":[]}],"title":"【Google Apps Script】その9　エラーを拾う","updated_at":"2017-12-13T22:30:53+09:00","url":"https://qiita.com/rf_p/items/eb0cd8733132b000189a","user":{"description":"","facebook_id":"","followees_count":27,"followers_count":6,"github_login_name":null,"id":"rf_p","items_count":11,"linkedin_id":"","location":"愛知県","name":"ryu f","organization":"エイチームブライズ","permanent_id":199678,"profile_image_url":"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50","twitter_screen_name":null,"website_url":""}},{"rendered_body":"\u003cp\u003eたとえばこんなときに、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"scss\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.scss\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003e@mixin\u003c/span\u003e\u003cspan class=\"nf\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$w\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$h\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n \u003cspan class=\"nt\"\u003ewidth\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nn\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003eheight\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nn\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003e@include\u003c/span\u003e\u003cspan class=\"nd\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこうなってほしい\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"css\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.css\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"引数の初期値をnullにする\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%BC%95%E6%95%B0%E3%81%AE%E5%88%9D%E6%9C%9F%E5%80%A4%E3%82%92null%E3%81%AB%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e引数の初期値をnullにする\u003c/h2\u003e\n\n\u003cp\u003eSass(scss)では引数の後ろに初期値を指定できます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"scss\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.scss\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003e@mixin\u003c/span\u003e\u003cspan class=\"nf\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$w\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$h\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n \u003cspan class=\"nt\"\u003ewidth\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nn\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003eheight\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nn\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003e@include\u003c/span\u003e\u003cspan class=\"nd\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"css\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.css\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"k\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eこの初期値にnullを指定すると実装したかった動きになります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"scss\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.scss\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003e@mixin\u003c/span\u003e\u003cspan class=\"nf\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$w\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$h\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n \u003cspan class=\"nt\"\u003ewidth\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nn\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n \u003cspan class=\"nt\"\u003eheight\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nn\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003e@include\u003c/span\u003e\u003cspan class=\"nd\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"css\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.css\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ちなみに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%A1%E3%81%AA%E3%81%BF%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eちなみに\u003c/h2\u003e\n\n\u003cp\u003e引数に真偽値を指定することもできます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"scss\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.scss\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003e@mixin\u003c/span\u003e\u003cspan class=\"nf\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$w\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$h\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n n-Pseudo\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n \u003cspan class=\"nt\"\u003ewidth\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nn\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n \u003cspan class=\"o\"\u003e@\u003c/span\u003e\u003cspan class=\"nt\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e$\u003c/span\u003e\u003cspan class=\"nt\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003eheight\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003e80px\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"k\"\u003e@else\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003eheight\u003c/span\u003e\u003cspan class=\"nd\"\u003e:\u003c/span\u003e \u003cspan class=\"nt\"\u003e40px\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003e@include\u003c/span\u003e\u003cspan class=\"nd\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n n-Pseudo\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"css\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estyle.css\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ediv\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"k\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e40\u003c/span\u003e\u003cspan class=\"kt\"\u003epx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n","body":"たとえばこんなときに、\n\n```scss:style.scss\n@mixin foo($w, $h){\n width: #{$w};\n height: #{$h};\n}\n\ndiv {\n @include foo(100px);\n}\n```\n\nこうなってほしい\n\n```css:style.css\ndiv {\n width: 100px;\n}\n```\n\n##引数の初期値をnullにする\nSass(scss)では引数の後ろに初期値を指定できます。\n\n```scss:style.scss\n@mixin foo($w, $h: 50px){\n width: #{$w};\n height: #{$h};\n}\n\ndiv {\n @include foo(100px);\n}\n```\n\n```css:style.css\ndiv {\n width: 100px;\n height: 50px;\n}\n```\n\nこの初期値にnullを指定すると実装したかった動きになります。\n\n```scss:style.scss\n@mixin foo($w, $h: null){\n width: #{$w};\n height: #{$h};\n}\n\ndiv {\n @include foo(100px);\n}\n```\n\n```css:style.css\ndiv {\n width: 100px;\n}\n```\n\n##ちなみに\n引数に真偽値を指定することもできます。\n\n```scss:style.scss\n@mixin foo($w, $h: true){\n width: #{$w};\n @if($h){\n  height: 80px;\n }\n @else {\n  height: 40px;\n }\n}\n\ndiv {\n @include foo(100px, false);\n}\n```\n\n```css:style.css\ndiv {\n width: 100px;\n height: 40px;\n}\n```\n","coediting":false,"comments_count":0,"created_at":"2017-12-13T22:28:27+09:00","group":null,"id":"2d69f6ae814333a43942","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"CSS","versions":[]},{"name":"Sass","versions":[]},{"name":"scss","versions":[]}],"title":"【Sass】mixinで引数を省略したときプロパティを出力しないようにする","updated_at":"2017-12-13T22:28:27+09:00","url":"https://qiita.com/siromath/items/2d69f6ae814333a43942","user":{"description":"HTML,CSS,JavaScriptなど\r\nWordpressのtheme制作中","facebook_id":"","followees_count":0,"followers_count":0,"github_login_name":null,"id":"siromath","items_count":3,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":176188,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/176188/profile-images/1496819234","twitter_screen_name":"siromath","website_url":""}},{"rendered_body":"\n\u003ch2\u003e\n\u003cspan id=\"microsoft-quantum-development-kitって\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#microsoft-quantum-development-kit%E3%81%A3%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMicrosoft Quantum Development Kitって？\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eMicrosoftの量子プログラミング用のフレームワーク\u003c/li\u003e\n\u003cli\u003e今週(12/12)リリース\u003c/li\u003e\n\u003cli\u003e後半のスライドは長いのでスライドモードで見ない方がいいかも\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"内容物\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%86%85%E5%AE%B9%E7%89%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e内容物\u003c/h2\u003e\n\n\u003cp\u003e量子プログラミングを行うための環境一揃い\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e量子プログラミング言語 Q#\u003c/li\u003e\n\u003cli\u003eシミュレータ\u003c/li\u003e\n\u003cli\u003eデバッグ（Visual Studio拡張）\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e（量子コンピュータの実物はまだ）\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"量子プログラミング言語-q\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%87%8F%E5%AD%90%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E-q\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e量子プログラミング言語 Q#\u003c/h2\u003e\n\n\u003cp\u003e量子コンピュータのコントローラ用言語と考えると分かりやすい\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" alt=\"図.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"量子プログラミング言語-q-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%87%8F%E5%AD%90%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E-q-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e量子プログラミング言語 Q#\u003c/h2\u003e\n\n\u003cp\u003e量子ビットを操作する量子デバイスに（古典コンピュータの）コントローラを接続して制御する\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" alt=\"図.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"量子プログラミング言語-q-2\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%87%8F%E5%AD%90%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E-q-2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e量子プログラミング言語 Q#\u003c/h2\u003e\n\n\u003cp\u003eコントローラは量子デバイスに対し，命令を送ったり測定結果を受け取ったりする\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" alt=\"図.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"量子プログラミング言語-q-3\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%87%8F%E5%AD%90%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E-q-3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e量子プログラミング言語 Q#\u003c/h2\u003e\n\n\u003cp\u003eコントローラの動作をプログラムすることで量子プログラミングする→Q#\u003cbr\u003e\n（『量子プログラミングの基礎』における古典的制御を持つ量子プログラム）\u003cbr\u003e\n\u003ca href=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/9021d6e71a4c7a4307b8b803006645c89e57a403/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f37333661386531332d303539662d356664392d316638612d3064303061623236333436382e706e67\" alt=\"図.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"簡単なqのプログラム\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B0%A1%E5%8D%98%E3%81%AAq%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e簡単なQ#のプログラム\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003enamespace Quantum.Bell\n{\n    open Microsoft.Quantum.Primitive;\n    open Microsoft.Quantum.Canon;\n\n    operation MakeBellState(x: Qubit, y: Qubit) : ()\n    {\n        body\n        {\n            H(x);\n            CNOT(x, y);\n        }\n    }\n}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003eC#とF#の合いの子\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eoperation\u003c/code\u003eで量子操作を定義する．\u003ccode\u003efunction\u003c/code\u003eを使えば古典的な関数も定義できる．\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ebody\u003c/code\u003eの中に量子操作を書く．\u003c/li\u003e\n\u003cli\u003e型は後置（\u003ccode\u003eQubit\u003c/code\u003eが量子ビット型，戻り値型が空のタプル型\u003ccode\u003e()\u003c/code\u003e）\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eH(x)\u003c/code\u003e, \u003ccode\u003eCNOT(x, y)\u003c/code\u003eと量子ビットに量子ゲートを作用させる\u003c/li\u003e\n\u003cli\u003eこの量子操作はベル状態（\u003ccode\u003e|00\u0026gt; + |11\u0026gt;\u003c/code\u003e）という2つの量子ビットが重ね合わさった状態を作る\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"少し複雑なqのプログラム\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%B0%91%E3%81%97%E8%A4%87%E9%9B%91%E3%81%AAq%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e少し複雑なQ#のプログラム\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003enamespace Quantum.Bell\n{\n    open Microsoft.Quantum.Primitive;\n    open Microsoft.Quantum.Canon;\n\n    operation MeasureBellState(count: Int) : (Int, Int, Int)\n    {\n        body\n        {\n            // カウンタ変数の初期化\n            mutable zero = 0;  // 測定して0が出た回数\n            mutable one = 0;   // 測定して1が出た回数\n            mutable match = 0; // 両方の測定が同じ値を返した回数\n\n            // count分試行を繰り返す\n            for (step in 1..count)\n            {\n                // |0\u0026gt;で初期化された量子ビットを2つ確保\n                using (qubits = Qubit[2])\n                {\n                    // 各量子ビットを変数に束縛\n                    let x = qubits[0];\n                    let y = qubits[1];\n\n                    // 2つの量子ビットをベル状態(|00\u0026gt; + |11\u0026gt;)にする\n                    MakeBellState(x, y);\n\n                    // それぞれの量子ビットを{ |0\u0026gt;, |1\u0026gt; }の基底で測定\n                    let xResult = M(x);\n                    let yResult = M(y);\n\n                    // |0\u0026gt; が出たとき\n                    if (xResult == Zero)\n                    {\n                        set zero = zero + 1;\n                    }\n　　　　　　　　　　　// |1\u0026gt; が出たとき\n                    else \n                    {\n                        set one = one + 1;\n                    }\n\n                    // それぞれの量子ビットから同じ測定結果が得られたとき\n                    if (xResult == yResult)\n                    {\n                        set match = match + 1;\n                    }\n\n                    // 量子ビットの解放前に|0\u0026gt;にリセットする\n                    if (xResult == One)\n                    {\n                        X(x);\n                    }\n                    if (yResult == One)\n                    {\n                        X(y);\n                    }\n                }   \n            }\n\n            return (zero, one, match);\n        }\n    }\n}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e変数宣言は\u003ccode\u003elet\u003c/code\u003e（不変）と\u003ccode\u003emutable\u003c/code\u003e（可変）\u003c/li\u003e\n\u003cli\u003e変数の方は初期化子から推論\u003c/li\u003e\n\u003cli\u003e繰り返しは\u003ccode\u003efor\u003c/code\u003e文と\u003ccode\u003erepeat..until\u003c/code\u003e文\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eusing\u003c/code\u003e文でクリーンな（\u003ccode\u003e|0\u0026gt;\u003c/code\u003eで初期化された）量子ビットの確保を行う\n\n\u003cul\u003e\n\u003cli\u003e量子デバイスに量子ビットを確保するように指示すると考えよう\u003c/li\u003e\n\u003cli\u003e繰り返し使えるようにするため，使用した量子ビットは解放（\u003ccode\u003eusing\u003c/code\u003e文の終了）前に\u003ccode\u003e|0\u0026gt;\u003c/code\u003eにリセットする必要がある\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eMakeBellState(x, y);\u003c/code\u003eで1スライド前の量子操作を呼び出し，ベル状態を作っている\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eM(x)\u003c/code\u003e，\u003ccode\u003eM(y)\u003c/code\u003eが測定操作\n\n\u003cul\u003e\n\u003cli\u003eデバイスに測定を指示し，結果を受け取る\u003c/li\u003e\n\u003cli\u003e測定結果は\u003ccode\u003eResult\u003c/code\u003e型で\u003ccode\u003eInt\u003c/code\u003eではない\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eその後の\u003ccode\u003eif\u003c/code\u003e文で測定結果に応じて\u003ccode\u003ezero\u003c/code\u003e, \u003ccode\u003eone\u003c/code\u003e, \u003ccode\u003ematch\u003c/code\u003eを更新\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003emutable\u003c/code\u003e変数の変更には\u003ccode\u003eset\u003c/code\u003e文を使う\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ereturn\u003c/code\u003eで\u003ccode\u003ezero\u003c/code\u003e, \u003ccode\u003eone\u003c/code\u003e, \u003ccode\u003ematch\u003c/code\u003eの3要素からなるタプルを返している\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"シミュレーション\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B7%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eシミュレーション\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eQ#で書いた量子プログラムを.NET上でシミュレーションすることができる\n\n\u003cul\u003e\n\u003cli\u003e公式ではC#かF#を使っている\u003c/li\u003e\n\u003cli\u003eVB.NETも使える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"シミュレーションコード\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B7%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eシミュレーションコード\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003eusing Microsoft.Quantum.Simulation.Core;\nusing Microsoft.Quantum.Simulation.Simulators;\n\nnamespace Quantum.Bell\n{\n    class Driver\n    {\n        static void Main(string[] args)\n        {\n            using (var sim = new QuantumSimulator())\n            {\n                var (zero, one, match) = MeasureBellState.Run(sim, 100).Result;\n                System.Console.WriteLine($\"zero : {zero}\");\n                System.Console.WriteLine($\"one  : {one}\");\n                System.Console.WriteLine($\"match: {match}\");\n            }\n        }\n    }\n}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eQuantumSimulator\u003c/code\u003eがシミュレータの.NETクラス\u003c/li\u003e\n\u003cli\u003eQ#の\u003ccode\u003eoperation\u003c/code\u003eは同名の.NETクラスにコンパイルされ，\u003ccode\u003eRun\u003c/code\u003eメソッドにシミュレータと引数を渡すことで実行できる\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実行結果\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行結果\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/d25cda70c7eb82309fd6808b87990f6587689c01/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f62636164353961332d666432632d363937302d656338632d6661376463303263323266332e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/d25cda70c7eb82309fd6808b87990f6587689c01/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f62636164353961332d666432632d363937302d656338632d6661376463303263323266332e706e67\" alt=\"2017-12-13_22h10_16.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/11714/bcad59a3-fd2c-6970-ec8c-fa7dc02c22f3.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eM(x)\u003c/code\u003eによってベル状態\u003ccode\u003e|00\u0026gt; + |11\u0026gt;\u003c/code\u003eから\u003ccode\u003e|00\u0026gt;\u003c/code\u003eと\u003ccode\u003e|11\u0026gt;\u003c/code\u003eのどちらか片方が選びだされ，測定結果は\u003ccode\u003e0\u003c/code\u003eと\u003ccode\u003e1\u003c/code\u003eがそれぞれ50%ずつ出てくる\n\n\u003cul\u003e\n\u003cli\u003e出力の\u003ccode\u003ezero\u003c/code\u003eと\u003ccode\u003eone\u003c/code\u003eの比率も大体50:50\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e一方，\u003ccode\u003e|00\u0026gt;\u003c/code\u003eと\u003ccode\u003e|11\u0026gt;\u003c/code\u003eのどちらにせよ1ビット目（\u003ccode\u003ex\u003c/code\u003e）と2ビット目（\u003ccode\u003ey\u003c/code\u003e）の値は等しい\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003ematch\u003c/code\u003eは必ず100になる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"デバッグvisual-studio拡張\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%87%E3%83%90%E3%83%83%E3%82%B0visual-studio%E6%8B%A1%E5%BC%B5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eデバッグ（Visual Studio拡張）\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eQ#はVisual Studioにシンタックスハイライトがある\u003c/li\u003e\n\u003cli\u003eアサーション用の関数がある\u003c/li\u003e\n\u003cli\u003eユニットテストが書けるらしい\u003c/li\u003e\n\u003cli\u003eVisual Studioのデバッガに対応\n\n\u003cul\u003e\n\u003cli\u003eブレークポイントをQ#内に挟める\u003c/li\u003e\n\u003cli\u003eステップ実行できる\u003c/li\u003e\n\u003cli\u003e量子ビットの中身を見たりとかは現状無理そう\u003c/li\u003e\n\u003cli\u003e古典アルゴリズム部分のデバッグはできる\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003chr\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"デバッガのスクリーンショット\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%87%E3%83%90%E3%83%83%E3%82%AC%E3%81%AE%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eデバッガのスクリーンショット\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/8aa2076fc991340c413962e1b13014c8cead31ae/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f35653966383039622d363539342d333531632d323635612d3536363765386464653130622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/8aa2076fc991340c413962e1b13014c8cead31ae/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f31313731342f35653966383039622d363539342d333531632d323635612d3536363765386464653130622e706e67\" alt=\"2017-12-13_22h19_46.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/11714/5e9f809b-6594-351c-265a-5667e8dde10b.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"量子プログラミングやっていきましょう\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%87%8F%E5%AD%90%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%84%E3%81%A3%E3%81%A6%E3%81%84%E3%81%8D%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e量子プログラミングやっていきましょう！\u003c/h1\u003e\n","body":"## Microsoft Quantum Development Kitって？\n+ Microsoftの量子プログラミング用のフレームワーク\n+ 今週(12/12)リリース\n+ 後半のスライドは長いのでスライドモードで見ない方がいいかも\n\n---\n\n## 内容物\n量子プログラミングを行うための環境一揃い\n\n+ 量子プログラミング言語 Q#\n+ シミュレータ\n+ デバッグ（Visual Studio拡張）\n\n（量子コンピュータの実物はまだ）\n\n---\n\n## 量子プログラミング言語 Q# \n量子コンピュータのコントローラ用言語と考えると分かりやすい\n![図.png](https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png)\n\n--- \n\n## 量子プログラミング言語 Q# \n量子ビットを操作する量子デバイスに（古典コンピュータの）コントローラを接続して制御する\n![図.png](https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png)\n\n---  \n\n## 量子プログラミング言語 Q# \nコントローラは量子デバイスに対し，命令を送ったり測定結果を受け取ったりする\n![図.png](https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png)\n\n---\n\n## 量子プログラミング言語 Q# \nコントローラの動作をプログラムすることで量子プログラミングする→Q#\n（『量子プログラミングの基礎』における古典的制御を持つ量子プログラム）\n![図.png](https://qiita-image-store.s3.amazonaws.com/0/11714/736a8e13-059f-5fd9-1f8a-0d00ab263468.png)\n\n---\n\n## 簡単なQ#のプログラム\n\n```\nnamespace Quantum.Bell\n{\n    open Microsoft.Quantum.Primitive;\n    open Microsoft.Quantum.Canon;\n\n    operation MakeBellState(x: Qubit, y: Qubit) : ()\n    {\n        body\n        {\n            H(x);\n            CNOT(x, y);\n        }\n    }\n}\n```\n\n+ C#とF#の合いの子\n+ `operation`で量子操作を定義する．`function`を使えば古典的な関数も定義できる．\n+ `body`の中に量子操作を書く．\n+ 型は後置（`Qubit`が量子ビット型，戻り値型が空のタプル型`()`）\n+ `H(x)`, `CNOT(x, y)`と量子ビットに量子ゲートを作用させる\n+ この量子操作はベル状態（`|00\u003e + |11\u003e`）という2つの量子ビットが重ね合わさった状態を作る\n\n---\n\n## 少し複雑なQ#のプログラム\n\n```\nnamespace Quantum.Bell\n{\n    open Microsoft.Quantum.Primitive;\n    open Microsoft.Quantum.Canon;\n\n    operation MeasureBellState(count: Int) : (Int, Int, Int)\n    {\n        body\n        {\n            // カウンタ変数の初期化\n            mutable zero = 0;  // 測定して0が出た回数\n            mutable one = 0;   // 測定して1が出た回数\n            mutable match = 0; // 両方の測定が同じ値を返した回数\n\n            // count分試行を繰り返す\n            for (step in 1..count)\n            {\n                // |0\u003eで初期化された量子ビットを2つ確保\n                using (qubits = Qubit[2])\n                {\n                    // 各量子ビットを変数に束縛\n                    let x = qubits[0];\n                    let y = qubits[1];\n\n                    // 2つの量子ビットをベル状態(|00\u003e + |11\u003e)にする\n                    MakeBellState(x, y);\n\n                    // それぞれの量子ビットを{ |0\u003e, |1\u003e }の基底で測定\n                    let xResult = M(x);\n                    let yResult = M(y);\n\n                    // |0\u003e が出たとき\n                    if (xResult == Zero)\n                    {\n                        set zero = zero + 1;\n                    }\n　　　　　　　　　　　// |1\u003e が出たとき\n                    else \n                    {\n                        set one = one + 1;\n                    }\n\n                    // それぞれの量子ビットから同じ測定結果が得られたとき\n                    if (xResult == yResult)\n                    {\n                        set match = match + 1;\n                    }\n\n                    // 量子ビットの解放前に|0\u003eにリセットする\n                    if (xResult == One)\n                    {\n                        X(x);\n                    }\n                    if (yResult == One)\n                    {\n                        X(y);\n                    }\n                }   \n            }\n\n            return (zero, one, match);\n        }\n    }\n}\n```\n\n+ 変数宣言は`let`（不変）と`mutable`（可変）\n+ 変数の方は初期化子から推論\n+ 繰り返しは`for`文と`repeat..until`文\n+ `using`文でクリーンな（`|0\u003e`で初期化された）量子ビットの確保を行う\n    + 量子デバイスに量子ビットを確保するように指示すると考えよう\n    + 繰り返し使えるようにするため，使用した量子ビットは解放（`using`文の終了）前に`|0\u003e`にリセットする必要がある\n+ `MakeBellState(x, y);`で1スライド前の量子操作を呼び出し，ベル状態を作っている\n+ `M(x)`，`M(y)`が測定操作\n    + デバイスに測定を指示し，結果を受け取る\n    + 測定結果は`Result`型で`Int`ではない\n+ その後の`if`文で測定結果に応じて`zero`, `one`, `match`を更新\n    + `mutable`変数の変更には`set`文を使う\n+ `return`で`zero`, `one`, `match`の3要素からなるタプルを返している\n\n---\n\n## シミュレーション\n\n+ Q#で書いた量子プログラムを.NET上でシミュレーションすることができる\n    + 公式ではC#かF#を使っている\n    + VB.NETも使える\n\n---\n\n## シミュレーションコード\n\n```\nusing Microsoft.Quantum.Simulation.Core;\nusing Microsoft.Quantum.Simulation.Simulators;\n\nnamespace Quantum.Bell\n{\n    class Driver\n    {\n        static void Main(string[] args)\n        {\n            using (var sim = new QuantumSimulator())\n            {\n                var (zero, one, match) = MeasureBellState.Run(sim, 100).Result;\n                System.Console.WriteLine($\"zero : {zero}\");\n                System.Console.WriteLine($\"one  : {one}\");\n                System.Console.WriteLine($\"match: {match}\");\n            }\n        }\n    }\n}\n```\n\n+ `QuantumSimulator`がシミュレータの.NETクラス\n+ Q#の`operation`は同名の.NETクラスにコンパイルされ，`Run`メソッドにシミュレータと引数を渡すことで実行できる\n\n--- \n\n## 実行結果\n\n![2017-12-13_22h10_16.png](https://qiita-image-store.s3.amazonaws.com/0/11714/bcad59a3-fd2c-6970-ec8c-fa7dc02c22f3.png)\n\n+ `M(x)`によってベル状態`|00\u003e + |11\u003e`から`|00\u003e`と`|11\u003e`のどちらか片方が選びだされ，測定結果は`0`と`1`がそれぞれ50%ずつ出てくる\n    + 出力の`zero`と`one`の比率も大体50:50\n+ 一方，`|00\u003e`と`|11\u003e`のどちらにせよ1ビット目（`x`）と2ビット目（`y`）の値は等しい\n    + `match`は必ず100になる\n\n---\n\n## デバッグ（Visual Studio拡張）\n+ Q#はVisual Studioにシンタックスハイライトがある\n+ アサーション用の関数がある\n+ ユニットテストが書けるらしい\n+ Visual Studioのデバッガに対応\n    + ブレークポイントをQ#内に挟める\n    + ステップ実行できる\n    + 量子ビットの中身を見たりとかは現状無理そう\n    + 古典アルゴリズム部分のデバッグはできる\n\n---\n\n## デバッガのスクリーンショット\n\n![2017-12-13_22h19_46.png](https://qiita-image-store.s3.amazonaws.com/0/11714/5e9f809b-6594-351c-265a-5667e8dde10b.png)\n\n---\n\n量子プログラミングやっていきましょう！\n===\n","coediting":false,"comments_count":0,"created_at":"2017-12-13T22:24:43+09:00","group":null,"id":"60dee22452684f6780ca","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"量子コンピュータ","versions":[]},{"name":"Q#","versions":[]}],"title":"Microsoft Quantum Development Kitの解説(Q#が主)","updated_at":"2017-12-13T22:29:58+09:00","url":"https://qiita.com/__pandaman64__/items/60dee22452684f6780ca","user":{"description":null,"facebook_id":null,"followees_count":20,"followers_count":11,"github_login_name":null,"id":"__pandaman64__","items_count":8,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":11714,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/11714/profile-images/1473682126","twitter_screen_name":"__pandaman64__","website_url":null}},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"はじめに\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eはじめに\u003c/h1\u003e\n\n\u003cp\u003eこの記事は、\u003ca href=\"https://qiita.com/sasanquaneuf/items/b78df5cea719c84eb5ad\" id=\"reference-470e5ebd4242817bb5bb\"\u003e【インターン】実際に依頼した仕事と感想を列挙するよ（だいたい技術要素ベース）\u003c/a\u003eの続編です。\u003cbr\u003e\n２ヶ月の間の特筆すべき差分と、今後の課題などを記載します。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"想定読者など\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%83%B3%E5%AE%9A%E8%AA%AD%E8%80%85%E3%81%AA%E3%81%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e想定読者など\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e学生：インターンを検討している人／参加している人\n\n\u003cul\u003e\n\u003cli\u003e技術的な意味で、インフルのエンジニアインターンでどのような事をするのか、なんとなくわかります。\u003c/li\u003e\n\u003cli\u003e他の人がどんな事をしていたのか、網羅的になんとなくわかります。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eその他企業の人：インターン実施を検討している人\n\n\u003cul\u003e\n\u003cli\u003eうまくインターンの学生を集めれば、このような作業を依頼できるかも？という実例を知る事ができます。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"株式会社インフルについて\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A0%AA%E5%BC%8F%E4%BC%9A%E7%A4%BE%E3%82%A4%E3%83%B3%E3%83%95%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e株式会社インフルについて\u003c/h2\u003e\n\n\u003cp\u003e2017年1月創業、3月より本格始動して、自社Webサービスを複数展開している会社です。各サービスの詳細は割愛しますが、自社サービスのアジャイル的な開発・運営を軸として、基幹システムやその他業務システムの受託開発もやっています。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"依頼した仕事など\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%9D%E9%A0%BC%E3%81%97%E3%81%9F%E4%BB%95%E4%BA%8B%E3%81%AA%E3%81%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e依頼した仕事など\u003c/h1\u003e\n\n\u003cp\u003e前回までで、以下のような技術を用いた作業を依頼していました。（各技術の概要などは前回記事を参照ください。）\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e実装関連\n\n\u003cul\u003e\n\u003cli\u003e開発環境構築\n\n\u003cul\u003e\n\u003cli\u003e多段ssh/portforward(ssh tunnel)\u003c/li\u003e\n\u003cli\u003egit/bitbucket（ソース管理）\u003c/li\u003e\n\u003cli\u003ePyCharm/WebStorm etc.（IDE）\u003c/li\u003e\n\u003cli\u003eSequelPro（MySQL管理ツール）\u003c/li\u003e\n\u003cli\u003ealembic（DBバージョン管理）\u003c/li\u003e\n\u003cli\u003enode\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003epython\n\n\u003cul\u003e\n\u003cli\u003eflask（軽量WEBフレームワーク）\u003c/li\u003e\n\u003cli\u003eSQLalchemy（ORM）\u003c/li\u003e\n\u003cli\u003e※redis（redisはインメモリDB）\u003c/li\u003e\n\u003cli\u003eWTForm（フォーム、バリデーション）\u003c/li\u003e\n\u003cli\u003ePyBabel（i18n）\u003c/li\u003e\n\u003cli\u003e※GrabzIt（画像出力API）\u003c/li\u003e\n\u003cli\u003e※opencv（画像処理）\u003c/li\u003e\n\u003cli\u003exlrd（エクセル加工）\u003c/li\u003e\n\u003cli\u003eapscheduler（スケジューラ）\u003c/li\u003e\n\u003cli\u003epytest（単体テスト）\u003c/li\u003e\n\u003cli\u003epandas（データフレーム処理）\u003c/li\u003e\n\u003cli\u003eApriori（aprioriアルゴリズム：アソシエーションルール）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTypeScript/JavaScript\n\n\u003cul\u003e\n\u003cli\u003eangular（定番）\u003c/li\u003e\n\u003cli\u003ereact\u003c/li\u003e\n\u003cli\u003ereact-redux\u003c/li\u003e\n\u003cli\u003ed3（データビジュアライズ）\u003c/li\u003e\n\u003cli\u003ehighcharts（チャート）\u003c/li\u003e\n\u003cli\u003eintrojs（チュートリアル的な奴）\u003c/li\u003e\n\u003cli\u003esnowshoe（電子スタンプ、通信先必須）\u003c/li\u003e\n\u003cli\u003ewScratchPad（スクラッチ削る奴）\u003c/li\u003e\n\u003cli\u003ejapan-map（日本地図）\u003c/li\u003e\n\u003cli\u003ejquery-gantt（ガントチャート）\u003c/li\u003e\n\u003cli\u003ejcrop（画像切り抜き）\u003c/li\u003e\n\u003cli\u003eadd to homescreen（ホーム画面に追加を促すバルーン）\u003c/li\u003e\n\u003cli\u003eadd to calendar（カレンダーに追加する機能）\u003c/li\u003e\n\u003cli\u003ebootstrap-tagsinput（タグ入力的な奴）\u003c/li\u003e\n\u003cli\u003ebootstrap-colorpicker（カラーピッカー、色を選ぶ奴）\u003c/li\u003e\n\u003cli\u003eimage-picker（画像とか選ぶ箱）\u003c/li\u003e\n\u003cli\u003eslick（スライダー）\u003c/li\u003e\n\u003cli\u003eexif.js（EXIF取得）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eテストほか\n\n\u003cul\u003e\n\u003cli\u003elocust（負荷試験）\u003c/li\u003e\n\u003cli\u003eowasp zap（脆弱性診断）\u003c/li\u003e\n\u003cli\u003esquash-tm（テスト管理）\u003c/li\u003e\n\u003cli\u003ecircle ci（CI環境）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e以下、前回との特筆すべき差分です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"本番環境構築\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%AC%E7%95%AA%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e本番環境構築\u003c/h2\u003e\n\n\u003cp\u003e本番環境を顧客別に用意する場面が出たので、管理監督しながら、全くゼロの状態からの構築を実際にやって貰いました。具体的な内容は以下のようなことです：\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"nat用インスタンスの作成設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#nat%E7%94%A8%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eNAT用インスタンスの作成、設定\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"ec2インスタンスの作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ec2%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eEC2インスタンスの作成\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"rdsの開始設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rds%E3%81%AE%E9%96%8B%E5%A7%8B%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRDSの開始、設定\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"elasticacheredisの設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#elasticacheredis%E3%81%AE%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eElastiCache(Redis)の設定\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"ec2のサーバーにansible使って関連ツール製品のデプロイ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ec2%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%ABansible%E4%BD%BF%E3%81%A3%E3%81%A6%E9%96%A2%E9%80%A3%E3%83%84%E3%83%BC%E3%83%AB%E8%A3%BD%E5%93%81%E3%81%AE%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eEC2のサーバーにansible使って関連ツール、製品のデプロイ\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"s3の開始設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#s3%E3%81%AE%E9%96%8B%E5%A7%8B%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eS3の開始、設定\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"sesの開始設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#ses%E3%81%AE%E9%96%8B%E5%A7%8B%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eSESの開始\u2028、設定\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"zabbixの設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#zabbix%E3%81%AE%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ezabbixの設定\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"bugsnagの設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#bugsnag%E3%81%AE%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ebugsnagの設定\u003c/h3\u003e\n\n\u003cp\u003eこれらは全て手順までQiita:Teamにまとめてもらったので、誰でも本番環境（相当の環境）を構築できるようになりました。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"モバイルネイティブアプリ作成\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96%E3%82%A2%E3%83%97%E3%83%AA%E4%BD%9C%E6%88%90\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e（モバイル）ネイティブアプリ作成\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"cordova--vue\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#cordova--vue\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecordova + vue\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"android\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#android\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eandroid\u003c/h3\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"製品の利用\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A3%BD%E5%93%81%E3%81%AE%E5%88%A9%E7%94%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e製品の利用\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"filemakerを用いた業務システム開発\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#filemaker%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E6%A5%AD%E5%8B%99%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E9%96%8B%E7%99%BA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eFileMakerを用いた業務システム開発\u003c/h3\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"クライアントの自動テストの仕組み構築\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E3%81%AE%E8%87%AA%E5%8B%95%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF%E6%A7%8B%E7%AF%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eクライアントの自動テストの仕組み構築\u003c/h2\u003e\n\n\u003cp\u003eざっくりとした指示だけで、以下の様なものを組み合わせてTypeScriptのUT環境を作ってもらいました。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"karma\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#karma\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ekarma\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"jasmine\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#jasmine\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ejasmine\u003c/h3\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"istanbul\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#istanbul\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eistanbul\u003c/h3\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"他社api連携\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%96%E7%A4%BEapi%E9%80%A3%E6%90%BA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e他社API連携\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"決済インターフェイス構築\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%B1%BA%E6%B8%88%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A7%E3%82%A4%E3%82%B9%E6%A7%8B%E7%AF%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e決済インターフェイス構築\u003c/h3\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"進捗のあった課題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%80%B2%E6%8D%97%E3%81%AE%E3%81%82%E3%81%A3%E3%81%9F%E8%AA%B2%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e進捗のあった課題\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"情報共有\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%83%85%E5%A0%B1%E5%85%B1%E6%9C%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e情報共有\u003c/h2\u003e\n\n\u003cp\u003e当初はポータルサイトの充実＋slackの充実を考えていたのですが、インターン生の提案によりQiita:Teamを採用しました。\u003cbr\u003e\nいま記事数で125件かな？半分ぐらい私が書いていますが、\u003cdel\u003e10000件を超えると消えてしまう\u003c/del\u003e無料slackのダイレクトメッセージを探すよりは生産的になったかなあと思います。\u003cbr\u003e\nslackを有料にするのと、Qiita:Teamを使うのとでコスト的な比較は難しいですが…\u003cbr\u003e\n\u003cdel\u003eただ、インターン生が圧倒的多数を占めるような会社においては、個人の利用時間と金額のバランスが通常の会社よりも不利なので、ちょっと優しくしてくれる仕組みがあってもいいのになーと思っています。\u003c/del\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"課題整理進捗管理\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AA%B2%E9%A1%8C%E6%95%B4%E7%90%86%E9%80%B2%E6%8D%97%E7%AE%A1%E7%90%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e課題整理・進捗管理\u003c/h2\u003e\n\n\u003cp\u003e一部では課題管理表を使い始めました。全員で使っている訳ではありません。\u003cbr\u003e\n現状、通常運用に乗っているサービスはJooto、乗ってないサービスの開発中の課題は課題管理表、という感じです。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"顧客からの様々なヒアリング方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%A1%A7%E5%AE%A2%E3%81%8B%E3%82%89%E3%81%AE%E6%A7%98%E3%80%85%E3%81%AA%E3%83%92%E3%82%A2%E3%83%AA%E3%83%B3%E3%82%B0%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e顧客からの様々なヒアリング方法\u003c/h2\u003e\n\n\u003cp\u003eインターン生とは全員と漏れなく機密保持契約を結んでいるので、業務上必要な範囲でQiita:Teamに議事録に相当する資料や、見積記録等を記載するようにしています。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"仕事の仕方自分自身のコスト意識\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%95%E4%BA%8B%E3%81%AE%E4%BB%95%E6%96%B9%E8%87%AA%E5%88%86%E8%87%AA%E8%BA%AB%E3%81%AE%E3%82%B3%E3%82%B9%E3%83%88%E6%84%8F%E8%AD%98\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e「仕事」の仕方、自分自身のコスト意識\u003c/h2\u003e\n\n\u003cp\u003e可能な範囲でちょいちょい仕事の仕方についての言及を含めるようにしました。\u003cbr\u003e\nあとは、少し緩めの設計資料（例えばエンドポイントの一覧表、APIとDBの項目のマッピング一覧表、などのようなもの）を、WBSとしても使えるよう明示的に作成指示するようにしました。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"勉強会の開催\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8B%89%E5%BC%B7%E4%BC%9A%E3%81%AE%E9%96%8B%E5%82%AC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e勉強会の開催\u003c/h2\u003e\n\n\u003cp\u003e各人が主体的に成果を発表するという意味での勉強会は開催していないのでまだ足りずですが、とりあえず設計講習会を開催してみました。記録は以下：\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://youtu.be/_knn0zoYbho\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://youtu.be/_knn0zoYbho\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"https://youtu.be/RmoMgraSTtk\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://youtu.be/RmoMgraSTtk\u003c/a\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"進捗のあまりない課題新しい課題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%80%B2%E6%8D%97%E3%81%AE%E3%81%82%E3%81%BE%E3%82%8A%E3%81%AA%E3%81%84%E8%AA%B2%E9%A1%8C%E6%96%B0%E3%81%97%E3%81%84%E8%AA%B2%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e進捗のあまりない課題・新しい課題\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"インターン生内のソースレビュー構造\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E7%94%9F%E5%86%85%E3%81%AE%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E6%A7%8B%E9%80%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eインターン生内のソースレビュー構造（？）\u003c/h2\u003e\n\n\u003cp\u003e最終的な確認は逃せないとしても、その手前ぐらいまでのレビューぐらいまでは任せて、自律的な集団にしたい。（組織構造を入れる、のに近いのかな）\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"結合以上のテストの自動テスト\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E5%90%88%E4%BB%A5%E4%B8%8A%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E8%87%AA%E5%8B%95%E3%83%86%E3%82%B9%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結合以上のテストの自動テスト\u003c/h2\u003e\n\n\u003cp\u003e全く手付かず。テストシナリオとかも手付かず…\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"詳細設計の書き方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A9%B3%E7%B4%B0%E8%A8%AD%E8%A8%88%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e詳細設計の書き方\u003c/h2\u003e\n\n\u003cp\u003eほぼ手付かず。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"単体テストケースの書き方境界値とかc0とか0件1件複数件とかの概念も含む\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8D%98%E4%BD%93%E3%83%86%E3%82%B9%E3%83%88%E3%82%B1%E3%83%BC%E3%82%B9%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9%E5%A2%83%E7%95%8C%E5%80%A4%E3%81%A8%E3%81%8Bc0%E3%81%A8%E3%81%8B0%E4%BB%B61%E4%BB%B6%E8%A4%87%E6%95%B0%E4%BB%B6%E3%81%A8%E3%81%8B%E3%81%AE%E6%A6%82%E5%BF%B5%E3%82%82%E5%90%AB%E3%82%80\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e単体テストケースの書き方（境界値とか、C0とか、0件・1件・複数件とか、の概念も含む）\u003c/h2\u003e\n\n\u003cp\u003eほぼ手付かず。網羅的に微妙なバグを潰す作業よりも、まだまだ根本的に新しい機能の実装を優先することが多い状況。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"面談\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%9D%A2%E8%AB%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e面談\u003c/h2\u003e\n\n\u003cp\u003eちゃんとフィードバックの面談をしないといけないのですが、忙しいという理由をつけてちゃんと実施出来ていないので、きちんとやらないといけません。。。うーん。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"その他感想など\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%81%AE%E4%BB%96%E6%84%9F%E6%83%B3%E3%81%AA%E3%81%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eその他、感想など\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"飲み会でオールする人はだいぶ少ない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%A3%B2%E3%81%BF%E4%BC%9A%E3%81%A7%E3%82%AA%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E4%BA%BA%E3%81%AF%E3%81%A0%E3%81%84%E3%81%B6%E5%B0%91%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e飲み会でオールする人はだいぶ少ない\u003c/h2\u003e\n\n\u003cp\u003e時代の流れなのかな？まだ警戒されているのかしら、、、\u003cbr\u003e\nまあ、みんな結構忙しいので、あんまりオールとかできないのかなーという感じもしますが。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"医学部生でもインターンを探している\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%8C%BB%E5%AD%A6%E9%83%A8%E7%94%9F%E3%81%A7%E3%82%82%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E3%82%92%E6%8E%A2%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e医学部生でもインターンを探している\u003c/h2\u003e\n\n\u003cp\u003e複数名、医学部生の方が作業をしていますが、偉いですね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"45月も9月も応募数はほとんど変わらない\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#45%E6%9C%88%E3%82%829%E6%9C%88%E3%82%82%E5%BF%9C%E5%8B%9F%E6%95%B0%E3%81%AF%E3%81%BB%E3%81%A8%E3%82%93%E3%81%A9%E5%A4%89%E3%82%8F%E3%82%89%E3%81%AA%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e4〜5月も9月も応募数はほとんど変わらない\u003c/h2\u003e\n\n\u003cp\u003e1日1名以上のペースで応募がありました。弊社は渋谷から南麻布（白金高輪）に移転したのですが、それぐらいの移動だと場所はほとんど関係ないように感じました。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"おしまい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%81%97%E3%81%BE%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおしまい\u003c/h1\u003e\n\n\u003cp\u003e有給インターンがもっと増えますように！\u003c/p\u003e\n","body":"# はじめに\n\nこの記事は、[【インターン】実際に依頼した仕事と感想を列挙するよ（だいたい技術要素ベース）](https://qiita.com/sasanquaneuf/items/b78df5cea719c84eb5ad)の続編です。\n２ヶ月の間の特筆すべき差分と、今後の課題などを記載します。\n\n## 想定読者など\n\n- 学生：インターンを検討している人／参加している人\n    - 技術的な意味で、インフルのエンジニアインターンでどのような事をするのか、なんとなくわかります。\n    - 他の人がどんな事をしていたのか、網羅的になんとなくわかります。\n- その他企業の人：インターン実施を検討している人\n    - うまくインターンの学生を集めれば、このような作業を依頼できるかも？という実例を知る事ができます。\n\n## 株式会社インフルについて\n\n2017年1月創業、3月より本格始動して、自社Webサービスを複数展開している会社です。各サービスの詳細は割愛しますが、自社サービスのアジャイル的な開発・運営を軸として、基幹システムやその他業務システムの受託開発もやっています。\n\n# 依頼した仕事など\n\n前回までで、以下のような技術を用いた作業を依頼していました。（各技術の概要などは前回記事を参照ください。）\n\n- 実装関連\n    - 開発環境構築\n        - 多段ssh/portforward(ssh tunnel)\n        - git/bitbucket（ソース管理）\n        - PyCharm/WebStorm etc.（IDE）\n        - SequelPro（MySQL管理ツール）\n        - alembic（DBバージョン管理）\n        - node\n    - python\n        - flask（軽量WEBフレームワーク）\n        - SQLalchemy（ORM）\n        - ※redis（redisはインメモリDB）\n        - WTForm（フォーム、バリデーション）\n        - PyBabel（i18n）\n        - ※GrabzIt（画像出力API）\n        - ※opencv（画像処理）\n        - xlrd（エクセル加工）\n        - apscheduler（スケジューラ）\n        - pytest（単体テスト）\n        - pandas（データフレーム処理）\n        - Apriori（aprioriアルゴリズム：アソシエーションルール）\n    - TypeScript/JavaScript\n        - angular（定番）\n        - react\n        - react-redux\n        - d3（データビジュアライズ）\n        - highcharts（チャート）\n        - introjs（チュートリアル的な奴）\n        - snowshoe（電子スタンプ、通信先必須）\n        - wScratchPad（スクラッチ削る奴）\n        - japan-map（日本地図）\n        - jquery-gantt（ガントチャート）\n        - jcrop（画像切り抜き）\n        - add to homescreen（ホーム画面に追加を促すバルーン）\n        - add to calendar（カレンダーに追加する機能）\n        - bootstrap-tagsinput（タグ入力的な奴）\n        - bootstrap-colorpicker（カラーピッカー、色を選ぶ奴）\n        - image-picker（画像とか選ぶ箱）\n        - slick（スライダー）\n        - exif.js（EXIF取得）\n    - テストほか\n        - locust（負荷試験）\n        - owasp zap（脆弱性診断）\n        - squash-tm（テスト管理）\n        - circle ci（CI環境）\n\n以下、前回との特筆すべき差分です。\n\n## 本番環境構築\n\n本番環境を顧客別に用意する場面が出たので、管理監督しながら、全くゼロの状態からの構築を実際にやって貰いました。具体的な内容は以下のようなことです：\n\n### NAT用インスタンスの作成、設定\n### EC2インスタンスの作成\n### RDSの開始、設定\n### ElastiCache(Redis)の設定\n### EC2のサーバーにansible使って関連ツール、製品のデプロイ\n### S3の開始、設定\n### SESの開始\u2028、設定\n### zabbixの設定\n### bugsnagの設定\n\nこれらは全て手順までQiita:Teamにまとめてもらったので、誰でも本番環境（相当の環境）を構築できるようになりました。\n\n## （モバイル）ネイティブアプリ作成\n\n### cordova + vue\n### android\n\n## 製品の利用\n\n### FileMakerを用いた業務システム開発\n\n## クライアントの自動テストの仕組み構築\n\nざっくりとした指示だけで、以下の様なものを組み合わせてTypeScriptのUT環境を作ってもらいました。\n\n### karma\n### jasmine\n### istanbul\n\n## 他社API連携\n\n### 決済インターフェイス構築\n\n# 進捗のあった課題\n\n## 情報共有\n\n当初はポータルサイトの充実＋slackの充実を考えていたのですが、インターン生の提案によりQiita:Teamを採用しました。\nいま記事数で125件かな？半分ぐらい私が書いていますが、~~10000件を超えると消えてしまう~~無料slackのダイレクトメッセージを探すよりは生産的になったかなあと思います。\nslackを有料にするのと、Qiita:Teamを使うのとでコスト的な比較は難しいですが…\n~~ただ、インターン生が圧倒的多数を占めるような会社においては、個人の利用時間と金額のバランスが通常の会社よりも不利なので、ちょっと優しくしてくれる仕組みがあってもいいのになーと思っています。~~\n\n## 課題整理・進捗管理\n\n一部では課題管理表を使い始めました。全員で使っている訳ではありません。\n現状、通常運用に乗っているサービスはJooto、乗ってないサービスの開発中の課題は課題管理表、という感じです。\n\n## 顧客からの様々なヒアリング方法\n\nインターン生とは全員と漏れなく機密保持契約を結んでいるので、業務上必要な範囲でQiita:Teamに議事録に相当する資料や、見積記録等を記載するようにしています。\n\n## 「仕事」の仕方、自分自身のコスト意識\n\n可能な範囲でちょいちょい仕事の仕方についての言及を含めるようにしました。\nあとは、少し緩めの設計資料（例えばエンドポイントの一覧表、APIとDBの項目のマッピング一覧表、などのようなもの）を、WBSとしても使えるよう明示的に作成指示するようにしました。\n\n## 勉強会の開催\n\n各人が主体的に成果を発表するという意味での勉強会は開催していないのでまだ足りずですが、とりあえず設計講習会を開催してみました。記録は以下：\n\nhttps://youtu.be/_knn0zoYbho\nhttps://youtu.be/RmoMgraSTtk\n\n# 進捗のあまりない課題・新しい課題\n\n## インターン生内のソースレビュー構造（？）\n\n最終的な確認は逃せないとしても、その手前ぐらいまでのレビューぐらいまでは任せて、自律的な集団にしたい。（組織構造を入れる、のに近いのかな）\n\n## 結合以上のテストの自動テスト\n\n全く手付かず。テストシナリオとかも手付かず…\n\n## 詳細設計の書き方\n\nほぼ手付かず。\n\n## 単体テストケースの書き方（境界値とか、C0とか、0件・1件・複数件とか、の概念も含む）\n\nほぼ手付かず。網羅的に微妙なバグを潰す作業よりも、まだまだ根本的に新しい機能の実装を優先することが多い状況。\n\n## 面談\n\nちゃんとフィードバックの面談をしないといけないのですが、忙しいという理由をつけてちゃんと実施出来ていないので、きちんとやらないといけません。。。うーん。\n\n# その他、感想など\n\n## 飲み会でオールする人はだいぶ少ない\n\n時代の流れなのかな？まだ警戒されているのかしら、、、\nまあ、みんな結構忙しいので、あんまりオールとかできないのかなーという感じもしますが。\n\n## 医学部生でもインターンを探している\n\n複数名、医学部生の方が作業をしていますが、偉いですね。\n\n## 4〜5月も9月も応募数はほとんど変わらない\n\n1日1名以上のペースで応募がありました。弊社は渋谷から南麻布（白金高輪）に移転したのですが、それぐらいの移動だと場所はほとんど関係ないように感じました。\n\n# おしまい\n\n有給インターンがもっと増えますように！\n","coediting":false,"comments_count":0,"created_at":"2017-12-13T22:23:10+09:00","group":null,"id":"61540a11e9ecc2797768","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Python","versions":[]},{"name":"JavaScript","versions":[]},{"name":"AWS","versions":[]},{"name":"TypeScript","versions":[]},{"name":"インターン","versions":[]}],"title":"【インターン】実際に依頼した仕事と今後の課題を列挙するよ（2017年12月版）","updated_at":"2017-12-13T22:23:10+09:00","url":"https://qiita.com/sasanquaneuf/items/61540a11e9ecc2797768","user":{"description":"ほらーまんではありません。\r\nI'm not horror man.\r\n「R」的なアレです。Rだけに。ただし英語は苦手です。\r\nQlik SenseとRが中心ですが、実は言語としてはC#やHaskellも好きです。節操が無い、とも言います。","facebook_id":"","followees_count":1,"followers_count":19,"github_login_name":"sasanquaneuf","id":"sasanquaneuf","items_count":51,"linkedin_id":"","location":"Tokyo, Japan","name":"","organization":"","permanent_id":94255,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/94255/profile-images/1473706215","twitter_screen_name":null,"website_url":""}},{"rendered_body":"\n\u003ch1\u003e\n\u003cspan id=\"visual-studio-codeの話\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#visual-studio-code%E3%81%AE%E8%A9%B1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVisual Studio Codeの話\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"markdownもいける\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdown%E3%82%82%E3%81%84%E3%81%91%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdownもいける\u003c/h2\u003e\n\n\u003cp\u003eVisual Studio CodeはMicrosoft社の提供するオープンソースのソフトウェアで、Windows/MacOS/Linux上で動作する軽量のソフトウェアです。\u003c/p\u003e\n\n\u003cp\u003e元はというと、Qiitaもそうですが、「自分のブログもそろそろMarkdownで書こうかな」と思って色々調べていたところに、Visual Studio Code（以下VSCode）もMarkdownに対応しているという話を見つけ、早速ダウンロードしてみたわけです。\u003c/p\u003e\n\n\u003cp\u003e（便利な拡張機能があったら、随時追記していきます。）\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"markdownに関して\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#markdown%E3%81%AB%E9%96%A2%E3%81%97%E3%81%A6\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMarkdownに関して\u003c/h3\u003e\n\n\u003cp\u003eこちらの方のが画像付きで分かりやすいです。\u003cbr\u003e\n\u003ca href=\"https://qiita.com/akira6592/items/da5271a4987eab2c7a5a\" class=\"autolink\" id=\"reference-3462d68595c584ba5195\"\u003ehttps://qiita.com/akira6592/items/da5271a4987eab2c7a5a\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"多くのプログラミング言語に対応\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%9A%E3%81%8F%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E%E3%81%AB%E5%AF%BE%E5%BF%9C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e多くのプログラミング言語に対応\u003c/h2\u003e\n\n\u003cp\u003eMicrosoftの提供するC#/VB.Net系列だけでなく、PHP, Ruby, Pythonなど様々な言語に対応しており、それらのハイライト表示にも対応しているとのこと。\u003c/p\u003e\n\n\u003cp\u003eまた、このMarkdown書式の.mdファイルにも対応し、プレビュー機能も備えています。これがなかなか見やすくて、完成予想図がさっと見渡せるのが良いですね。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"その他気になること\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%81%AE%E4%BB%96%E6%B0%97%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eその他気になること\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"拡張機能\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e拡張機能\u003c/h3\u003e\n\n\u003cp\u003eMarkdownだけで探してもずらっと拡張機能が並びます。何だろう、All in Oneパッケージって。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"ショートカットやカスタマイズ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88%E3%82%84%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eショートカットやカスタマイズ\u003c/h3\u003e\n\n\u003cp\u003eショートカット機能やカスタマイズが豊富で、カスタマイズ設定は、\u003cbr\u003e\n- アプリケーション全体\u003cbr\u003e\n- ユーザーごと\u003cbr\u003e\n- ワークスペース（VS本家のソリューションとか）ごと\u003c/p\u003e\n\n\u003cp\u003eという風に分かれていて、下から順に優先し上書きされていくとのこと。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"困ったときのctrlp\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%9B%B0%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AEctrlp\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e困ったときのCtrl+P\u003c/h3\u003e\n\n\u003cp\u003e上記のショートカットは多岐にわたるので、正直覚えていられません。\u003c/p\u003e\n\n\u003cp\u003eしかし、「Ctrl+P」のショートカットキーさえ覚えていれば、クイックオープンウィンドウが表示され、やりたいことを（日本語でも出来るそうですが、英語で）入力するとコマンドの候補が出てくるので、カーソルキーで選択して実行、なんてことが出来ます。\u003c/p\u003e\n","body":"# Visual Studio Codeの話\n## Markdownもいける\nVisual Studio CodeはMicrosoft社の提供するオープンソースのソフトウェアで、Windows/MacOS/Linux上で動作する軽量のソフトウェアです。\n\n元はというと、Qiitaもそうですが、「自分のブログもそろそろMarkdownで書こうかな」と思って色々調べていたところに、Visual Studio Code（以下VSCode）もMarkdownに対応しているという話を見つけ、早速ダウンロードしてみたわけです。\n\n（便利な拡張機能があったら、随時追記していきます。）\n\n### Markdownに関して\nこちらの方のが画像付きで分かりやすいです。\nhttps://qiita.com/akira6592/items/da5271a4987eab2c7a5a\n\n## 多くのプログラミング言語に対応\nMicrosoftの提供するC#/VB.Net系列だけでなく、PHP, Ruby, Pythonなど様々な言語に対応しており、それらのハイライト表示にも対応しているとのこと。\n\nまた、このMarkdown書式の.mdファイルにも対応し、プレビュー機能も備えています。これがなかなか見やすくて、完成予想図がさっと見渡せるのが良いですね。\n\n## その他気になること\n### 拡張機能\nMarkdownだけで探してもずらっと拡張機能が並びます。何だろう、All in Oneパッケージって。\n\n### ショートカットやカスタマイズ\nショートカット機能やカスタマイズが豊富で、カスタマイズ設定は、\n- アプリケーション全体\n- ユーザーごと\n- ワークスペース（VS本家のソリューションとか）ごと\n\nという風に分かれていて、下から順に優先し上書きされていくとのこと。\n\n### 困ったときのCtrl+P\n上記のショートカットは多岐にわたるので、正直覚えていられません。\n\nしかし、「Ctrl+P」のショートカットキーさえ覚えていれば、クイックオープンウィンドウが表示され、やりたいことを（日本語でも出来るそうですが、英語で）入力するとコマンドの候補が出てくるので、カーソルキーで選択して実行、なんてことが出来ます。\n","coediting":false,"comments_count":0,"created_at":"2017-12-13T22:18:30+09:00","group":null,"id":"86cc619492ab037c2c8a","likes_count":0,"private":false,"reactions_count":0,"tags":[{"name":"Markdown","versions":[]},{"name":"VisualStudioCode","versions":[]}],"title":"Visual Studio Codeを導入してみた","updated_at":"2017-12-13T22:18:30+09:00","url":"https://qiita.com/hwn_vba/items/86cc619492ab037c2c8a","user":{"description":"C#のPGを担当しながら、効率化のためにVBAを勉強中です","facebook_id":"AyumuWatanabe","followees_count":1,"followers_count":1,"github_login_name":"urahito","id":"hwn_vba","items_count":7,"linkedin_id":"ayumuwatanabe-83492761","location":"千葉県","name":"","organization":"","permanent_id":114324,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/114324/profile-images/1473712555","twitter_screen_name":"urahito_vba","website_url":""}}]